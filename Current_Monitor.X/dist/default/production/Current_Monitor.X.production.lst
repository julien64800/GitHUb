

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Apr 13 16:04:46 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26  0000                     
    27                           ; Version 1.41
    28                           ; Generated 25/01/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F8722 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     
    62                           	psect	smallconst
    63  001000                     __psmallconst:
    64                           	opt stack 0
    65  001000  00                 	db	0
    66  001001                     _dpowers:
    67                           	opt stack 0
    68  001001  0001               	dw	1
    69  001003  000A               	dw	10
    70  001005  0064               	dw	100
    71  001007  03E8               	dw	1000
    72  001009  2710               	dw	10000
    73  00100B                     __end_of_dpowers:
    74                           	opt stack 0
    75  0000                     _EECON2	set	4007
    76  0000                     _INTCONbits	set	4082
    77  0000                     _EEDATA	set	4008
    78  0000                     _EEADR	set	4009
    79  0000                     _EECON1bits	set	4006
    80  0000                     _ADRESH	set	4036
    81  0000                     _ADCON0bits	set	4034
    82  0000                     _ADCON2	set	4032
    83  0000                     _ADCON1	set	4033
    84  0000                     _ADCON0	set	4034
    85  0000                     _PORTA	set	3968
    86  0000                     _PORTD	set	3971
    87  0000                     _TXREG1	set	4013
    88  0000                     _RCREG1	set	4014
    89  0000                     _PIR1bits	set	3998
    90  0000                     _RCSTA1bits	set	4011
    91  0000                     _SPBRG1	set	4015
    92  0000                     _BAUDCON1bits	set	3966
    93  0000                     _TXSTA1bits	set	4012
    94  0000                     _TRISCbits	set	3988
    95  0000                     _TRISA	set	3986
    96  0000                     _TRISD	set	3989
    97  0000                     _RCONbits	set	4048
    98  00100B                     STR_2:
    99  00100B  41                 	db	65	;'A'
   100  00100C  63                 	db	99	;'c'
   101  00100D  71                 	db	113	;'q'
   102  00100E  75                 	db	117	;'u'
   103  00100F  69                 	db	105	;'i'
   104  001010  73                 	db	115	;'s'
   105  001011  69                 	db	105	;'i'
   106  001012  74                 	db	116	;'t'
   107  001013  69                 	db	105	;'i'
   108  001014  6F                 	db	111	;'o'
   109  001015  6E                 	db	110	;'n'
   110  001016  20                 	db	32
   111  001017  63                 	db	99	;'c'
   112  001018  6F                 	db	111	;'o'
   113  001019  6D                 	db	109	;'m'
   114  00101A  70                 	db	112	;'p'
   115  00101B  6C                 	db	108	;'l'
   116  00101C  65                 	db	101	;'e'
   117  00101D  74                 	db	116	;'t'
   118  00101E  65                 	db	101	;'e'
   119  00101F  64                 	db	100	;'d'
   120  001020  20                 	db	32
   121  001021  70                 	db	112	;'p'
   122  001022  72                 	db	114	;'r'
   123  001023  65                 	db	101	;'e'
   124  001024  73                 	db	115	;'s'
   125  001025  73                 	db	115	;'s'
   126  001026  20                 	db	32
   127  001027  53                 	db	83	;'S'
   128  001028  20                 	db	32
   129  001029  74                 	db	116	;'t'
   130  00102A  6F                 	db	111	;'o'
   131  00102B  20                 	db	32
   132  00102C  72                 	db	114	;'r'
   133  00102D  65                 	db	101	;'e'
   134  00102E  61                 	db	97	;'a'
   135  00102F  64                 	db	100	;'d'
   136  001030  20                 	db	32
   137  001031  6F                 	db	111	;'o'
   138  001032  72                 	db	114	;'r'
   139  001033  20                 	db	32
   140  001034  52                 	db	82	;'R'
   141  001035  20                 	db	32
   142  001036  74                 	db	116	;'t'
   143  001037  6F                 	db	111	;'o'
   144  001038  20                 	db	32
   145  001039  72                 	db	114	;'r'
   146  00103A  65                 	db	101	;'e'
   147  00103B  73                 	db	115	;'s'
   148  00103C  65                 	db	101	;'e'
   149  00103D  74                 	db	116	;'t'
   150  00103E  3A                 	db	58	;':'
   151  00103F  20                 	db	32
   152  001040  0A                 	db	10
   153  001041  00                 	db	0
   154  001042                     STR_1:
   155  001042  41                 	db	65	;'A'
   156  001043  63                 	db	99	;'c'
   157  001044  71                 	db	113	;'q'
   158  001045  75                 	db	117	;'u'
   159  001046  69                 	db	105	;'i'
   160  001047  73                 	db	115	;'s'
   161  001048  69                 	db	105	;'i'
   162  001049  74                 	db	116	;'t'
   163  00104A  69                 	db	105	;'i'
   164  00104B  6F                 	db	111	;'o'
   165  00104C  6E                 	db	110	;'n'
   166  00104D  20                 	db	32
   167  00104E  69                 	db	105	;'i'
   168  00104F  6E                 	db	110	;'n'
   169  001050  20                 	db	32
   170  001051  70                 	db	112	;'p'
   171  001052  72                 	db	114	;'r'
   172  001053  6F                 	db	111	;'o'
   173  001054  67                 	db	103	;'g'
   174  001055  72                 	db	114	;'r'
   175  001056  65                 	db	101	;'e'
   176  001057  73                 	db	115	;'s'
   177  001058  73                 	db	115	;'s'
   178  001059  20                 	db	32
   179  00105A  70                 	db	112	;'p'
   180  00105B  6C                 	db	108	;'l'
   181  00105C  65                 	db	101	;'e'
   182  00105D  61                 	db	97	;'a'
   183  00105E  73                 	db	115	;'s'
   184  00105F  65                 	db	101	;'e'
   185  001060  20                 	db	32
   186  001061  77                 	db	119	;'w'
   187  001062  61                 	db	97	;'a'
   188  001063  69                 	db	105	;'i'
   189  001064  74                 	db	116	;'t'
   190  001065  3A                 	db	58	;':'
   191  001066  20                 	db	32
   192  001067  0A                 	db	10
   193  001068  00                 	db	0
   194  001069                     STR_5:
   195  001069  41                 	db	65	;'A'
   196  00106A  76                 	db	118	;'v'
   197  00106B  65                 	db	101	;'e'
   198  00106C  72                 	db	114	;'r'
   199  00106D  61                 	db	97	;'a'
   200  00106E  67                 	db	103	;'g'
   201  00106F  65                 	db	101	;'e'
   202  001070  20                 	db	32
   203  001071  6F                 	db	111	;'o'
   204  001072  66                 	db	102	;'f'
   205  001073  20                 	db	32
   206  001074  6C                 	db	108	;'l'
   207  001075  61                 	db	97	;'a'
   208  001076  73                 	db	115	;'s'
   209  001077  74                 	db	116	;'t'
   210  001078  20                 	db	32
   211  001079  35                 	db	53	;'5'
   212  00107A  30                 	db	48	;'0'
   213  00107B  20                 	db	32
   214  00107C  53                 	db	83	;'S'
   215  00107D  61                 	db	97	;'a'
   216  00107E  6D                 	db	109	;'m'
   217  00107F  70                 	db	112	;'p'
   218  001080  6C                 	db	108	;'l'
   219  001081  65                 	db	101	;'e'
   220  001082  73                 	db	115	;'s'
   221  001083  3A                 	db	58	;':'
   222  001084  20                 	db	32
   223  001085  25                 	db	37
   224  001086  64                 	db	100	;'d'
   225  001087  20                 	db	32
   226  001088  6D                 	db	109	;'m'
   227  001089  41                 	db	65	;'A'
   228  00108A  20                 	db	32
   229  00108B  0A                 	db	10
   230  00108C  00                 	db	0
   231  00108D                     STR_4:
   232  00108D  53                 	db	83	;'S'
   233  00108E  61                 	db	97	;'a'
   234  00108F  6D                 	db	109	;'m'
   235  001090  70                 	db	112	;'p'
   236  001091  6C                 	db	108	;'l'
   237  001092  69                 	db	105	;'i'
   238  001093  6E                 	db	110	;'n'
   239  001094  67                 	db	103	;'g'
   240  001095  20                 	db	32
   241  001096  6E                 	db	110	;'n'
   242  001097  75                 	db	117	;'u'
   243  001098  6D                 	db	109	;'m'
   244  001099  62                 	db	98	;'b'
   245  00109A  65                 	db	101	;'e'
   246  00109B  72                 	db	114	;'r'
   247  00109C  20                 	db	32
   248  00109D  25                 	db	37
   249  00109E  64                 	db	100	;'d'
   250  00109F  3A                 	db	58	;':'
   251  0010A0  20                 	db	32
   252  0010A1  25                 	db	37
   253  0010A2  64                 	db	100	;'d'
   254  0010A3  20                 	db	32
   255  0010A4  6D                 	db	109	;'m'
   256  0010A5  41                 	db	65	;'A'
   257  0010A6  20                 	db	32
   258  0010A7  3A                 	db	58	;':'
   259  0010A8  0A                 	db	10
   260  0010A9  00                 	db	0
   261  0010AA                     STR_3:
   262  0010AA  50                 	db	80	;'P'
   263  0010AB  6C                 	db	108	;'l'
   264  0010AC  65                 	db	101	;'e'
   265  0010AD  61                 	db	97	;'a'
   266  0010AE  73                 	db	115	;'s'
   267  0010AF  65                 	db	101	;'e'
   268  0010B0  20                 	db	32
   269  0010B1  77                 	db	119	;'w'
   270  0010B2  61                 	db	97	;'a'
   271  0010B3  69                 	db	105	;'i'
   272  0010B4  74                 	db	116	;'t'
   273  0010B5  2E                 	db	46
   274  0010B6  2E                 	db	46
   275  0010B7  2E                 	db	46
   276  0010B8  2E                 	db	46
   277  0010B9  2E                 	db	46
   278  0010BA  2E                 	db	46
   279  0010BB  20                 	db	32
   280  0010BC  0A                 	db	10
   281  0010BD  00                 	db	0
   282                           
   283                           ; #config settings
   284  0010BE  00                 	db	0	; dummy byte at the end
   285  0000                     
   286                           	psect	cinit
   287  001594                     __pcinit:
   288                           	opt stack 0
   289  001594                     start_initialization:
   290                           	opt stack 0
   291  001594                     __initialization:
   292                           	opt stack 0
   293                           
   294                           ; Clear objects allocated to BANK0 (150 bytes)
   295  001594  EE00  F060         	lfsr	0,__pbssBANK0
   296  001598  0E96               	movlw	150
   297  00159A                     clear_0:
   298  00159A  6AEE               	clrf	postinc0,c
   299  00159C  06E8               	decf	wreg,f,c
   300  00159E  E1FD               	bnz	clear_0
   301                           
   302                           ; Clear objects allocated to COMRAM (13 bytes)
   303  0015A0  EE00  F027         	lfsr	0,__pbssCOMRAM
   304  0015A4  0E0D               	movlw	13
   305  0015A6                     clear_1:
   306  0015A6  6AEE               	clrf	postinc0,c
   307  0015A8  06E8               	decf	wreg,f,c
   308  0015AA  E1FD               	bnz	clear_1
   309  0015AC                     end_of_initialization:
   310                           	opt stack 0
   311  0015AC                     __end_of__initialization:
   312                           	opt stack 0
   313  0015AC  0100               	movlb	0
   314  0015AE  EF0E  F009         	goto	_main	;jump to C main() function
   315                           postinc0	equ	0xFEE
   316                           wreg	equ	0xFE8
   317                           
   318                           	psect	bssCOMRAM
   319  000027                     __pbssCOMRAM:
   320                           	opt stack 0
   321  000027                     _x:
   322                           	opt stack 0
   323  000027                     	ds	2
   324  000029                     _a:
   325                           	opt stack 0
   326  000029                     	ds	2
   327  00002B                     _Keyboard:
   328                           	opt stack 0
   329  00002B                     	ds	1
   330  00002C                     _Average:
   331                           	opt stack 0
   332  00002C                     	ds	1
   333  00002D                     _result_EEPROM:
   334                           	opt stack 0
   335  00002D                     	ds	1
   336  00002E                     _Resistor:
   337                           	opt stack 0
   338  00002E                     	ds	1
   339  00002F                     _Current:
   340                           	opt stack 0
   341  00002F                     	ds	1
   342  000030                     _Voltage_Drop:
   343                           	opt stack 0
   344  000030                     	ds	1
   345  000031                     _b:
   346                           	opt stack 0
   347  000031                     	ds	3
   348                           postinc0	equ	0xFEE
   349                           wreg	equ	0xFE8
   350                           
   351                           	psect	bssBANK0
   352  000060                     __pbssBANK0:
   353                           	opt stack 0
   354  000060                     _Sample_for_Average:
   355                           	opt stack 0
   356  000060                     	ds	50
   357  000092                     _EEPROM_read:
   358                           	opt stack 0
   359  000092                     	ds	50
   360  0000C4                     _Sample:
   361                           	opt stack 0
   362  0000C4                     	ds	50
   363                           postinc0	equ	0xFEE
   364                           wreg	equ	0xFE8
   365                           
   366                           	psect	cstackCOMRAM
   367  000001                     __pcstackCOMRAM:
   368                           	opt stack 0
   369  000001                     ??_Analog_Capture_ON:
   370  000001                     ?___awdiv:
   371                           	opt stack 0
   372  000001                     ?___lwdiv:
   373                           	opt stack 0
   374  000001                     Send_to_UART@i:
   375                           	opt stack 0
   376  000001                     EEPROM_Write@value:
   377                           	opt stack 0
   378  000001                     ___awdiv@dividend:
   379                           	opt stack 0
   380  000001                     ___lwdiv@dividend:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x0
   384  000001                     	ds	2
   385  000003                     EEPROM_Write@address:
   386                           	opt stack 0
   387  000003                     Analog_Capture_ON@x:
   388                           	opt stack 0
   389  000003                     ___awdiv@divisor:
   390                           	opt stack 0
   391  000003                     ___lwdiv@divisor:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x2
   395  000003                     	ds	2
   396  000005                     ___awdiv@counter:
   397                           	opt stack 0
   398  000005                     ___lwdiv@quotient:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x4
   402  000005                     	ds	1
   403  000006                     ___awdiv@sign:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x5
   407  000006                     	ds	1
   408  000007                     ___lwdiv@counter:
   409                           	opt stack 0
   410  000007                     ___awdiv@quotient:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x6
   414  000007                     	ds	1
   415  000008                     ?___lwmod:
   416                           	opt stack 0
   417  000008                     ___lwmod@dividend:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x7
   421  000008                     	ds	1
   422  000009                     Average_Function@x:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x8
   426  000009                     	ds	1
   427  00000A                     ___lwmod@divisor:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x9
   431  00000A                     	ds	1
   432  00000B                     EEPROM_Read@address:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0xA
   436  00000B                     	ds	1
   437  00000C                     ___lwmod@counter:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0xB
   441  00000C                     	ds	1
   442  00000D                     ?_sprintf:
   443                           	opt stack 0
   444  00000D                     sprintf@sp:
   445                           	opt stack 0
   446                           
   447                           ; 2 bytes @ 0xC
   448  00000D                     	ds	2
   449  00000F                     sprintf@f:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0xE
   453  00000F                     	ds	6
   454  000015                     ??_sprintf:
   455                           
   456                           ; 1 bytes @ 0x14
   457  000015                     	ds	1
   458  000016                     sprintf@ap:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x15
   462  000016                     	ds	2
   463  000018                     sprintf@flag:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x17
   467  000018                     	ds	1
   468  000019                     sprintf@prec:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x18
   472  000019                     	ds	1
   473  00001A                     sprintf@val:
   474                           	opt stack 0
   475                           
   476                           ; 2 bytes @ 0x19
   477  00001A                     	ds	2
   478  00001C                     sprintf@c:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x1B
   482  00001C                     	ds	1
   483  00001D                     ??_main:
   484                           
   485                           ; 1 bytes @ 0x1C
   486  00001D                     	ds	2
   487  00001F                     main@i:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x1E
   491  00001F                     	ds	2
   492  000021                     main@i_616:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x20
   496  000021                     	ds	2
   497  000023                     main@x:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x22
   501  000023                     	ds	1
   502  000024                     main@y:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x23
   506  000024                     	ds	1
   507  000025                     main@x_613:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x24
   511  000025                     	ds	2
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           
   515 ;;
   516 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   517 ;;
   518 ;; *************** function _main *****************
   519 ;; Defined at:
   520 ;;		line 51 in file "Current_Monitor.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  i               2   30[COMRAM] int 
   525 ;;  x               2   36[COMRAM] int 
   526 ;;  i               2   32[COMRAM] int 
   527 ;;  y               1   35[COMRAM] unsigned char 
   528 ;;  x               1   34[COMRAM] unsigned char 
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;Total ram usage:       10 bytes
   543 ;; Hardware stack levels required when called:    3
   544 ;; This function calls:
   545 ;;		_Analog_Capture_OFF
   546 ;;		_Analog_Capture_ON
   547 ;;		_EEPROM_Read
   548 ;;		_EEPROM_Write
   549 ;;		_Initialize_Analog
   550 ;;		_Initialize_UART
   551 ;;		_Read_UART_Input
   552 ;;		_Send_to_UART
   553 ;;		_sprintf
   554 ;; This function is called by:
   555 ;;		Startup code after reset
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           	psect	text0
   560  00121C                     __ptext0:
   561                           	opt stack 0
   562  00121C                     _main:
   563                           	opt stack 28
   564                           
   565                           ;Current_Monitor.c: 53: RCONbits.RI=0;
   566                           
   567                           ;incstack = 0
   568  00121C  98D0               	bcf	4048,4,c	;volatile
   569                           
   570                           ;Current_Monitor.c: 54: TRISD=0x00;
   571  00121E  0E00               	movlw	0
   572  001220  6E95               	movwf	3989,c	;volatile
   573                           
   574                           ;Current_Monitor.c: 55: TRISA=0xFF;
   575  001222  6892               	setf	3986,c	;volatile
   576                           
   577                           ;Current_Monitor.c: 56: Initialize_UART();
   578  001224  ECE7  F00A         	call	_Initialize_UART	;wreg free
   579                           
   580                           ;Current_Monitor.c: 57: sprintf(b,"Acquisition in progress please wait: \n");
   581  001228  0E31               	movlw	low _b
   582  00122A  6E0D               	movwf	sprintf@sp,c
   583  00122C  0E00               	movlw	high _b
   584  00122E  6E0E               	movwf	sprintf@sp+1,c
   585  001230  0E42               	movlw	low STR_1
   586  001232  6E0F               	movwf	sprintf@f,c
   587  001234  0E10               	movlw	high STR_1
   588  001236  6E10               	movwf	sprintf@f+1,c
   589  001238  EC60  F008         	call	_sprintf	;wreg free
   590                           
   591                           ;Current_Monitor.c: 58: Send_to_UART();
   592  00123C  EC83  F00A         	call	_Send_to_UART	;wreg free
   593                           
   594                           ;Current_Monitor.c: 59: Initialize_Analog();
   595  001240  ECD9  F00A         	call	_Initialize_Analog	;wreg free
   596                           
   597                           ;Current_Monitor.c: 60: Analog_Capture_ON ();
   598  001244  ECE7  F009         	call	_Analog_Capture_ON	;wreg free
   599                           
   600                           ;Current_Monitor.c: 62: for (uint8_t x=0,y=0;x<=50,y<=50;x++,y++)
   601  001248  0E00               	movlw	0
   602  00124A  6E23               	movwf	main@x,c
   603  00124C  0E00               	movlw	0
   604  00124E  6E24               	movwf	main@y,c
   605  001250  D014               	goto	l1398
   606  001252                     l1392:
   607                           
   608                           ;Current_Monitor.c: 63: {
   609                           ;Current_Monitor.c: 64: EEPROM_Write(x,Sample[y]);
   610  001252  5024               	movf	main@y,w,c
   611  001254  0D01               	mullw	1
   612  001256  0EC4               	movlw	low _Sample
   613  001258  24F3               	addwf	prodl,w,c
   614  00125A  6ED9               	movwf	fsr2l,c
   615  00125C  0E00               	movlw	high _Sample
   616  00125E  20F4               	addwfc	prodh,w,c
   617  001260  6EDA               	movwf	fsr2h,c
   618  001262  50DF               	movf	indf2,w,c
   619  001264  6E1D               	movwf	??_main& (0+255),c
   620  001266  6A1E               	clrf	(??_main+1)& (0+255),c
   621  001268  C01D  F001         	movff	??_main,EEPROM_Write@value
   622  00126C  C01E  F002         	movff	??_main+1,EEPROM_Write@value+1
   623  001270  5023               	movf	main@x,w,c
   624  001272  ECB7  F00A         	call	_EEPROM_Write
   625  001276  2A23               	incf	main@x,f,c
   626  001278  2A24               	incf	main@y,f,c
   627  00127A                     l1398:
   628  00127A  0E32               	movlw	50
   629  00127C  6424               	cpfsgt	main@y,c
   630  00127E  D7E9               	goto	l1392
   631  001280                     l1400:
   632                           
   633                           ;Current_Monitor.c: 69: {
   634                           ;Current_Monitor.c: 70: sprintf(b,"Acquisition completed press S to read or R to reset: 
      +                          \n");
   635  001280  0E31               	movlw	low _b
   636  001282  6E0D               	movwf	sprintf@sp,c
   637  001284  0E00               	movlw	high _b
   638  001286  6E0E               	movwf	sprintf@sp+1,c
   639  001288  0E0B               	movlw	low STR_2
   640  00128A  6E0F               	movwf	sprintf@f,c
   641  00128C  0E10               	movlw	high STR_2
   642  00128E  6E10               	movwf	sprintf@f+1,c
   643  001290  EC60  F008         	call	_sprintf	;wreg free
   644                           
   645                           ;Current_Monitor.c: 71: Send_to_UART();
   646  001294  EC83  F00A         	call	_Send_to_UART	;wreg free
   647                           
   648                           ;Current_Monitor.c: 72: Read_UART_Input();
   649  001298  ECF1  F00A         	call	_Read_UART_Input	;wreg free
   650                           
   651                           ;Current_Monitor.c: 73: if(Keyboard=='R')
   652  00129C  0E52               	movlw	82
   653  00129E  182B               	xorwf	_Keyboard,w,c
   654  0012A0  B4D8               	btfsc	status,2,c
   655                           
   656                           ;Current_Monitor.c: 74: {
   657                           ;Current_Monitor.c: 75: RCONbits.RI=1;
   658  0012A2  88D0               	bsf	4048,4,c	;volatile
   659                           
   660                           ;Current_Monitor.c: 76: }
   661                           ;Current_Monitor.c: 78: if(Keyboard=='S')
   662  0012A4  0E53               	movlw	83
   663  0012A6  182B               	xorwf	_Keyboard,w,c
   664  0012A8  A4D8               	btfss	status,2,c
   665  0012AA  D7EA               	goto	l1400
   666                           
   667                           ;Current_Monitor.c: 79: {
   668                           ;Current_Monitor.c: 80: sprintf(b,"Please wait...... \n");
   669  0012AC  0E31               	movlw	low _b
   670  0012AE  6E0D               	movwf	sprintf@sp,c
   671  0012B0  0E00               	movlw	high _b
   672  0012B2  6E0E               	movwf	sprintf@sp+1,c
   673  0012B4  0EAA               	movlw	low STR_3
   674  0012B6  6E0F               	movwf	sprintf@f,c
   675  0012B8  0E10               	movlw	high STR_3
   676  0012BA  6E10               	movwf	sprintf@f+1,c
   677  0012BC  EC60  F008         	call	_sprintf	;wreg free
   678                           
   679                           ;Current_Monitor.c: 81: Send_to_UART();
   680  0012C0  EC83  F00A         	call	_Send_to_UART	;wreg free
   681                           
   682                           ;Current_Monitor.c: 82: Analog_Capture_OFF();
   683  0012C4  ECF7  F00A         	call	_Analog_Capture_OFF	;wreg free
   684                           
   685                           ;Current_Monitor.c: 83: for(int x=0;x<=50;x++)
   686  0012C8  0E00               	movlw	0
   687  0012CA  6E26               	movwf	main@x_613+1,c
   688  0012CC  0E00               	movlw	0
   689  0012CE  6E25               	movwf	main@x_613,c
   690  0012D0                     l1420:
   691  0012D0  BE26               	btfsc	main@x_613+1,7,c
   692  0012D2  D006               	goto	l1424
   693  0012D4  5026               	movf	main@x_613+1,w,c
   694  0012D6  E123               	bnz	l1438
   695  0012D8  0E33               	movlw	51
   696  0012DA  5C25               	subwf	main@x_613,w,c
   697  0012DC  B0D8               	btfsc	status,0,c
   698  0012DE  D01F               	goto	l1438
   699  0012E0                     l1424:
   700                           
   701                           ;Current_Monitor.c: 84: {
   702                           ;Current_Monitor.c: 85: EEPROM_Read(x);
   703  0012E0  5025               	movf	main@x_613,w,c
   704  0012E2  ECA2  F00A         	call	_EEPROM_Read
   705                           
   706                           ;Current_Monitor.c: 86: int i =0;
   707  0012E6  0E00               	movlw	0
   708  0012E8  6E20               	movwf	main@i+1,c
   709  0012EA  0E00               	movlw	0
   710  0012EC  6E1F               	movwf	main@i,c
   711                           
   712                           ;Current_Monitor.c: 87: i++;
   713  0012EE  4A1F               	infsnz	main@i,f,c
   714  0012F0  2A20               	incf	main@i+1,f,c
   715                           
   716                           ;Current_Monitor.c: 88: sprintf(b,"Sampling number %d: %d mA :\n",x,result_EEPROM);
   717  0012F2  0E31               	movlw	low _b
   718  0012F4  6E0D               	movwf	sprintf@sp,c
   719  0012F6  0E00               	movlw	high _b
   720  0012F8  6E0E               	movwf	sprintf@sp+1,c
   721  0012FA  0E8D               	movlw	low STR_4
   722  0012FC  6E0F               	movwf	sprintf@f,c
   723  0012FE  0E10               	movlw	high STR_4
   724  001300  6E10               	movwf	sprintf@f+1,c
   725  001302  C025  F011         	movff	main@x_613,?_sprintf+4
   726  001306  C026  F012         	movff	main@x_613+1,?_sprintf+5
   727  00130A  C02D  F013         	movff	_result_EEPROM,?_sprintf+6
   728  00130E  6A14               	clrf	?_sprintf+7,c
   729  001310  EC60  F008         	call	_sprintf	;wreg free
   730                           
   731                           ;Current_Monitor.c: 89: Send_to_UART();
   732  001314  EC83  F00A         	call	_Send_to_UART	;wreg free
   733  001318  4A25               	infsnz	main@x_613,f,c
   734  00131A  2A26               	incf	main@x_613+1,f,c
   735  00131C  D7D9               	goto	l1420
   736  00131E                     l1438:
   737                           
   738                           ;Current_Monitor.c: 90: }
   739                           ;Current_Monitor.c: 91: int i =0;
   740  00131E  0E00               	movlw	0
   741  001320  6E22               	movwf	main@i_616+1,c
   742  001322  0E00               	movlw	0
   743  001324  6E21               	movwf	main@i_616,c
   744                           
   745                           ;Current_Monitor.c: 92: i++;
   746  001326  4A21               	infsnz	main@i_616,f,c
   747  001328  2A22               	incf	main@i_616+1,f,c
   748                           
   749                           ;Current_Monitor.c: 93: sprintf(b,"Average of last 50 Samples: %d mA \n",Average);
   750  00132A  0E31               	movlw	low _b
   751  00132C  6E0D               	movwf	sprintf@sp,c
   752  00132E  0E00               	movlw	high _b
   753  001330  6E0E               	movwf	sprintf@sp+1,c
   754  001332  0E69               	movlw	low STR_5
   755  001334  6E0F               	movwf	sprintf@f,c
   756  001336  0E10               	movlw	high STR_5
   757  001338  6E10               	movwf	sprintf@f+1,c
   758  00133A  C02C  F011         	movff	_Average,?_sprintf+4
   759  00133E  6A12               	clrf	?_sprintf+5,c
   760  001340  EC60  F008         	call	_sprintf	;wreg free
   761                           
   762                           ;Current_Monitor.c: 94: Send_to_UART();
   763  001344  EC83  F00A         	call	_Send_to_UART	;wreg free
   764  001348  D79B               	goto	l1400
   765  00134A                     __end_of_main:
   766                           	opt stack 0
   767                           prodh	equ	0xFF4
   768                           prodl	equ	0xFF3
   769                           postinc0	equ	0xFEE
   770                           wreg	equ	0xFE8
   771                           indf2	equ	0xFDF
   772                           fsr2h	equ	0xFDA
   773                           fsr2l	equ	0xFD9
   774                           status	equ	0xFD8
   775                           
   776 ;; *************** function _sprintf *****************
   777 ;; Defined at:
   778 ;;		line 492 in file "/Applications/microchip/xc8/v1.41/sources/common/doprnt.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  sp              2   12[COMRAM] PTR unsigned char 
   781 ;;		 -> b(3), 
   782 ;;  f               2   14[COMRAM] PTR const unsigned char 
   783 ;;		 -> STR_5(36), STR_4(29), STR_3(20), STR_2(55), 
   784 ;;		 -> STR_1(39), 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  tmpval          4    0        struct .
   787 ;;  cp              3    0        PTR const unsigned char 
   788 ;;  val             2   25[COMRAM] unsigned int 
   789 ;;  ap              2   21[COMRAM] PTR void [1]
   790 ;;		 -> ?_sprintf(2), 
   791 ;;  len             2    0        unsigned int 
   792 ;;  c               1   27[COMRAM] char 
   793 ;;  prec            1   24[COMRAM] char 
   794 ;;  flag            1   23[COMRAM] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  2   12[COMRAM] int 
   797 ;; Registers used:
   798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   804 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;Total ram usage:       16 bytes
   809 ;; Hardware stack levels used:    1
   810 ;; Hardware stack levels required when called:    1
   811 ;; This function calls:
   812 ;;		___lwdiv
   813 ;;		___lwmod
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text1
   820  0010C0                     __ptext1:
   821                           	opt stack 0
   822  0010C0                     _sprintf:
   823                           	opt stack 29
   824                           
   825                           ;doprnt.c: 494: va_list ap;
   826                           ;doprnt.c: 499: signed char c;
   827                           ;doprnt.c: 506: signed char prec;
   828                           ;doprnt.c: 508: unsigned char flag;
   829                           ;doprnt.c: 523: union {
   830                           ;doprnt.c: 524: unsigned long vd;
   831                           ;doprnt.c: 525: double integ;
   832                           ;doprnt.c: 526: } tmpval;
   833                           ;doprnt.c: 528: unsigned int val;
   834                           ;doprnt.c: 529: unsigned len;
   835                           ;doprnt.c: 530: const char * cp;
   836                           ;doprnt.c: 533: *ap = __va_start();
   837                           
   838                           ;incstack = 0
   839  0010C0  0E11               	movlw	low (?_sprintf+4)
   840  0010C2  6E16               	movwf	sprintf@ap,c
   841  0010C4  0E00               	movlw	high (?_sprintf+4)
   842  0010C6  6E17               	movwf	sprintf@ap+1,c
   843                           
   844                           ;doprnt.c: 536: while(c = *f++) {
   845  0010C8  D094               	goto	l1294
   846  0010CA                     l1242:
   847                           
   848                           ;doprnt.c: 538: if(c != '%')
   849  0010CA  0E25               	movlw	37
   850  0010CC  181C               	xorwf	sprintf@c,w,c
   851  0010CE  B4D8               	btfsc	status,2,c
   852  0010D0  D009               	goto	l1248
   853                           
   854                           ;doprnt.c: 540: {
   855                           ;doprnt.c: 541: ((*sp++ = (c)));
   856  0010D2  C00D  FFD9         	movff	sprintf@sp,fsr2l
   857  0010D6  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   858  0010DA  C01C  FFDF         	movff	sprintf@c,indf2
   859  0010DE  4A0D               	infsnz	sprintf@sp,f,c
   860  0010E0  2A0E               	incf	sprintf@sp+1,f,c
   861                           
   862                           ;doprnt.c: 542: continue;
   863  0010E2  D087               	goto	l1294
   864  0010E4                     l1248:
   865                           
   866                           ;doprnt.c: 543: }
   867                           ;doprnt.c: 548: flag = 0;
   868  0010E4  0E00               	movlw	0
   869  0010E6  6E18               	movwf	sprintf@flag,c
   870                           
   871                           ;doprnt.c: 822: }
   872                           
   873                           ;doprnt.c: 813: continue;
   874                           
   875                           ;doprnt.c: 802: default:
   876                           
   877                           ;doprnt.c: 698: case 'i':
   878                           ;doprnt.c: 699: break;
   879                           
   880                           ;doprnt.c: 697: case 'd':
   881                           
   882                           ;doprnt.c: 638: goto alldone;
   883                           
   884                           ;doprnt.c: 637: case 0:
   885                           
   886                           ;doprnt.c: 635: switch(c = *f++) {
   887  0010E8  C00F  FFF6         	movff	sprintf@f,tblptrl
   888  0010EC  C010  FFF7         	movff	sprintf@f+1,tblptrh
   889  0010F0  4A0F               	infsnz	sprintf@f,f,c
   890  0010F2  2A10               	incf	sprintf@f+1,f,c
   891  0010F4                     	if	0	;tblptru may be non-zero
   892  0010F4                     	endif
   893  0010F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   894  0010F4  0E00               	movlw	low (__mediumconst shr (0+16))
   895  0010F6  6EF8               	movwf	tblptru,c
   896  0010F8                     	endif
   897  0010F8  0008               	tblrd		*
   898  0010FA  CFF5 F01C          	movff	tablat,sprintf@c
   899  0010FE  501C               	movf	sprintf@c,w,c
   900                           
   901                           ; Switch size 1, requested type "space"
   902                           ; Number of cases is 3, Range of values is 0 to 105
   903                           ; switch strategies available:
   904                           ; Name         Instructions Cycles
   905                           ; simple_byte           10     6 (average)
   906                           ;	Chosen strategy is simple_byte
   907  001100  0A00               	xorlw	0	; case 0
   908  001102  B4D8               	btfsc	status,2,c
   909  001104  D084               	goto	l1296
   910  001106  0A64               	xorlw	100	; case 100
   911  001108  B4D8               	btfsc	status,2,c
   912  00110A  D003               	goto	l1254
   913  00110C  0A0D               	xorlw	13	; case 105
   914  00110E  A4D8               	btfss	status,2,c
   915  001110  D070               	goto	l1294
   916  001112                     l1254:
   917                           
   918                           ;doprnt.c: 1253: {
   919                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   920  001112  C016  FFD9         	movff	sprintf@ap,fsr2l
   921  001116  C017  FFDA         	movff	sprintf@ap+1,fsr2h
   922  00111A  CFDE F01A          	movff	postinc2,sprintf@val
   923  00111E  CFDD F01B          	movff	postdec2,sprintf@val+1
   924  001122  0E02               	movlw	2
   925  001124  2616               	addwf	sprintf@ap,f,c
   926  001126  0E00               	movlw	0
   927  001128  2217               	addwfc	sprintf@ap+1,f,c
   928                           
   929                           ;doprnt.c: 1261: if((int)val < 0) {
   930  00112A  AE1B               	btfss	sprintf@val+1,7,c
   931  00112C  D006               	goto	l1264
   932                           
   933                           ;doprnt.c: 1262: flag |= 0x03;
   934  00112E  0E03               	movlw	3
   935  001130  1218               	iorwf	sprintf@flag,f,c
   936                           
   937                           ;doprnt.c: 1263: val = -val;
   938  001132  6C1A               	negf	sprintf@val,c
   939  001134  1E1B               	comf	sprintf@val+1,f,c
   940  001136  B0D8               	btfsc	status,0,c
   941  001138  2A1B               	incf	sprintf@val+1,f,c
   942  00113A                     l1264:
   943                           
   944                           ;doprnt.c: 1264: }
   945                           ;doprnt.c: 1266: }
   946                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   947  00113A  0E01               	movlw	1
   948  00113C  6E1C               	movwf	sprintf@c,c
   949  00113E                     l1266:
   950  00113E  0E05               	movlw	5
   951  001140  181C               	xorwf	sprintf@c,w,c
   952  001142  B4D8               	btfsc	status,2,c
   953  001144  D015               	goto	l1278
   954                           
   955                           ;doprnt.c: 1306: if(val < dpowers[c])
   956  001146  501C               	movf	sprintf@c,w,c
   957  001148  0D02               	mullw	2
   958  00114A  0E01               	movlw	low _dpowers
   959  00114C  24F3               	addwf	prodl,w,c
   960  00114E  6EF6               	movwf	tblptrl,c
   961  001150  0E10               	movlw	high _dpowers
   962  001152  20F4               	addwfc	prodh,w,c
   963  001154  6EF7               	movwf	tblptrh,c
   964  001156                     	if	1	;There are 3 active tblptr bytes
   965  001156  6AF8               	clrf	tblptru,c
   966  001158  0E00               	movlw	low (__mediumconst shr (0+16))
   967  00115A  22F8               	addwfc	tblptru,f,c
   968  00115C                     	endif
   969  00115C  0009               	tblrd		*+
   970  00115E  50F5               	movf	tablat,w,c
   971  001160  5C1A               	subwf	sprintf@val,w,c
   972  001162  0009               	tblrd		*+
   973  001164  50F5               	movf	tablat,w,c
   974  001166  581B               	subwfb	sprintf@val+1,w,c
   975  001168  A0D8               	btfss	status,0,c
   976  00116A  D002               	goto	l1278
   977                           
   978                           ;doprnt.c: 1307: break;
   979  00116C  2A1C               	incf	sprintf@c,f,c
   980  00116E  D7E7               	goto	l1266
   981  001170                     l1278:
   982                           
   983                           ;doprnt.c: 1422: {
   984                           ;doprnt.c: 1438: if(flag & 0x03)
   985  001170  C018  F015         	movff	sprintf@flag,??_sprintf
   986  001174  0E03               	movlw	3
   987  001176  1615               	andwf	??_sprintf,f,c
   988  001178  B4D8               	btfsc	status,2,c
   989  00117A  D008               	goto	l1284
   990                           
   991                           ;doprnt.c: 1439: ((*sp++ = ('-')));
   992  00117C  C00D  FFD9         	movff	sprintf@sp,fsr2l
   993  001180  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   994  001184  0E2D               	movlw	45
   995  001186  6EDF               	movwf	indf2,c
   996  001188  4A0D               	infsnz	sprintf@sp,f,c
   997  00118A  2A0E               	incf	sprintf@sp+1,f,c
   998  00118C                     l1284:
   999                           
  1000                           ;doprnt.c: 1469: }
  1001                           ;doprnt.c: 1472: prec = c;
  1002  00118C  C01C  F019         	movff	sprintf@c,sprintf@prec
  1003                           
  1004                           ;doprnt.c: 1474: while(prec--) {
  1005  001190  D02C               	goto	l1292
  1006  001192                     l1286:
  1007                           
  1008                           ;doprnt.c: 1478: {
  1009                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1010  001192  5019               	movf	sprintf@prec,w,c
  1011  001194  0D02               	mullw	2
  1012  001196  0E01               	movlw	low _dpowers
  1013  001198  24F3               	addwf	prodl,w,c
  1014  00119A  6EF6               	movwf	tblptrl,c
  1015  00119C  0E10               	movlw	high _dpowers
  1016  00119E  20F4               	addwfc	prodh,w,c
  1017  0011A0  6EF7               	movwf	tblptrh,c
  1018  0011A2                     	if	1	;There are 3 active tblptr bytes
  1019  0011A2  6AF8               	clrf	tblptru,c
  1020  0011A4  0E00               	movlw	low (__mediumconst shr (0+16))
  1021  0011A6  22F8               	addwfc	tblptru,f,c
  1022  0011A8                     	endif
  1023  0011A8  0009               	tblrd		*+
  1024  0011AA  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1025  0011AE  000A               	tblrd		*-
  1026  0011B0  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1027  0011B4  C01A  F001         	movff	sprintf@val,___lwdiv@dividend
  1028  0011B8  C01B  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1029  0011BC  EC16  F00A         	call	___lwdiv	;wreg free
  1030  0011C0  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1031  0011C4  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1032  0011C8  0E00               	movlw	0
  1033  0011CA  6E0B               	movwf	___lwmod@divisor+1,c
  1034  0011CC  0E0A               	movlw	10
  1035  0011CE  6E0A               	movwf	___lwmod@divisor,c
  1036  0011D0  EC62  F00A         	call	___lwmod	;wreg free
  1037  0011D4  5008               	movf	?___lwmod,w,c
  1038  0011D6  0F30               	addlw	48
  1039  0011D8  6E1C               	movwf	sprintf@c,c
  1040                           
  1041                           ;doprnt.c: 1523: }
  1042                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1043  0011DA  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1044  0011DE  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1045  0011E2  C01C  FFDF         	movff	sprintf@c,indf2
  1046  0011E6  4A0D               	infsnz	sprintf@sp,f,c
  1047  0011E8  2A0E               	incf	sprintf@sp+1,f,c
  1048  0011EA                     l1292:
  1049  0011EA  0619               	decf	sprintf@prec,f,c
  1050  0011EC  2819               	incf	sprintf@prec,w,c
  1051  0011EE  A4D8               	btfss	status,2,c
  1052  0011F0  D7D0               	goto	l1286
  1053  0011F2                     l1294:
  1054  0011F2  C00F  FFF6         	movff	sprintf@f,tblptrl
  1055  0011F6  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1056  0011FA  4A0F               	infsnz	sprintf@f,f,c
  1057  0011FC  2A10               	incf	sprintf@f+1,f,c
  1058  0011FE                     	if	0	;tblptru may be non-zero
  1059  0011FE                     	endif
  1060  0011FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1061  0011FE  0E00               	movlw	low (__mediumconst shr (0+16))
  1062  001200  6EF8               	movwf	tblptru,c
  1063  001202                     	endif
  1064  001202  0008               	tblrd		*
  1065  001204  CFF5 F01C          	movff	tablat,sprintf@c
  1066  001208  501C               	movf	sprintf@c,w,c
  1067  00120A  A4D8               	btfss	status,2,c
  1068  00120C  D75E               	goto	l1242
  1069  00120E                     l1296:
  1070                           
  1071                           ;doprnt.c: 1538: *sp = 0;
  1072  00120E  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1073  001212  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1074  001216  0E00               	movlw	0
  1075  001218  6EDF               	movwf	indf2,c
  1076  00121A  0012               	return	
  1077  00121C                     __end_of_sprintf:
  1078                           	opt stack 0
  1079                           tblptru	equ	0xFF8
  1080                           tblptrh	equ	0xFF7
  1081                           tblptrl	equ	0xFF6
  1082                           tablat	equ	0xFF5
  1083                           prodh	equ	0xFF4
  1084                           prodl	equ	0xFF3
  1085                           postinc0	equ	0xFEE
  1086                           wreg	equ	0xFE8
  1087                           indf2	equ	0xFDF
  1088                           postinc2	equ	0xFDE
  1089                           postdec2	equ	0xFDD
  1090                           fsr2h	equ	0xFDA
  1091                           fsr2l	equ	0xFD9
  1092                           status	equ	0xFD8
  1093                           
  1094 ;; *************** function ___lwmod *****************
  1095 ;; Defined at:
  1096 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/lwmod.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  dividend        2    7[COMRAM] unsigned int 
  1099 ;;  divisor         2    9[COMRAM] unsigned int 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  counter         1   11[COMRAM] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;                  2    7[COMRAM] unsigned int 
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;Total ram usage:        5 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_sprintf
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text2
  1125  0014C4                     __ptext2:
  1126                           	opt stack 0
  1127  0014C4                     ___lwmod:
  1128                           	opt stack 29
  1129                           
  1130                           ;incstack = 0
  1131  0014C4  500A               	movf	___lwmod@divisor,w,c
  1132  0014C6  100B               	iorwf	___lwmod@divisor+1,w,c
  1133  0014C8  B4D8               	btfsc	status,2,c
  1134  0014CA  D018               	goto	l603
  1135  0014CC  0E01               	movlw	1
  1136  0014CE  6E0C               	movwf	___lwmod@counter,c
  1137  0014D0  D004               	goto	l1222
  1138  0014D2                     l1220:
  1139  0014D2  90D8               	bcf	status,0,c
  1140  0014D4  360A               	rlcf	___lwmod@divisor,f,c
  1141  0014D6  360B               	rlcf	___lwmod@divisor+1,f,c
  1142  0014D8  2A0C               	incf	___lwmod@counter,f,c
  1143  0014DA                     l1222:
  1144  0014DA  AE0B               	btfss	___lwmod@divisor+1,7,c
  1145  0014DC  D7FA               	goto	l1220
  1146  0014DE                     l1224:
  1147  0014DE  500A               	movf	___lwmod@divisor,w,c
  1148  0014E0  5C08               	subwf	___lwmod@dividend,w,c
  1149  0014E2  500B               	movf	___lwmod@divisor+1,w,c
  1150  0014E4  5809               	subwfb	___lwmod@dividend+1,w,c
  1151  0014E6  A0D8               	btfss	status,0,c
  1152  0014E8  D004               	goto	l1228
  1153  0014EA  500A               	movf	___lwmod@divisor,w,c
  1154  0014EC  5E08               	subwf	___lwmod@dividend,f,c
  1155  0014EE  500B               	movf	___lwmod@divisor+1,w,c
  1156  0014F0  5A09               	subwfb	___lwmod@dividend+1,f,c
  1157  0014F2                     l1228:
  1158  0014F2  90D8               	bcf	status,0,c
  1159  0014F4  320B               	rrcf	___lwmod@divisor+1,f,c
  1160  0014F6  320A               	rrcf	___lwmod@divisor,f,c
  1161  0014F8  2E0C               	decfsz	___lwmod@counter,f,c
  1162  0014FA  D7F1               	goto	l1224
  1163  0014FC                     l603:
  1164  0014FC  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1165  001500  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1166  001504  0012               	return		;funcret
  1167  001506                     __end_of___lwmod:
  1168                           	opt stack 0
  1169                           tblptru	equ	0xFF8
  1170                           tblptrh	equ	0xFF7
  1171                           tblptrl	equ	0xFF6
  1172                           tablat	equ	0xFF5
  1173                           prodh	equ	0xFF4
  1174                           prodl	equ	0xFF3
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           indf2	equ	0xFDF
  1178                           postinc2	equ	0xFDE
  1179                           postdec2	equ	0xFDD
  1180                           fsr2h	equ	0xFDA
  1181                           fsr2l	equ	0xFD9
  1182                           status	equ	0xFD8
  1183                           
  1184 ;; *************** function ___lwdiv *****************
  1185 ;; Defined at:
  1186 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/lwdiv.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  dividend        2    0[COMRAM] unsigned int 
  1189 ;;  divisor         2    2[COMRAM] unsigned int 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  quotient        2    4[COMRAM] unsigned int 
  1192 ;;  counter         1    6[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  2    0[COMRAM] unsigned int 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1202 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;Total ram usage:        7 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_sprintf
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text3
  1216  00142C                     __ptext3:
  1217                           	opt stack 0
  1218  00142C                     ___lwdiv:
  1219                           	opt stack 29
  1220                           
  1221                           ;incstack = 0
  1222  00142C  0E00               	movlw	0
  1223  00142E  6E06               	movwf	___lwdiv@quotient+1,c
  1224  001430  0E00               	movlw	0
  1225  001432  6E05               	movwf	___lwdiv@quotient,c
  1226  001434  5003               	movf	___lwdiv@divisor,w,c
  1227  001436  1004               	iorwf	___lwdiv@divisor+1,w,c
  1228  001438  B4D8               	btfsc	status,2,c
  1229  00143A  D01C               	goto	l593
  1230  00143C  0E01               	movlw	1
  1231  00143E  6E07               	movwf	___lwdiv@counter,c
  1232  001440  D004               	goto	l1202
  1233  001442                     l1200:
  1234  001442  90D8               	bcf	status,0,c
  1235  001444  3603               	rlcf	___lwdiv@divisor,f,c
  1236  001446  3604               	rlcf	___lwdiv@divisor+1,f,c
  1237  001448  2A07               	incf	___lwdiv@counter,f,c
  1238  00144A                     l1202:
  1239  00144A  AE04               	btfss	___lwdiv@divisor+1,7,c
  1240  00144C  D7FA               	goto	l1200
  1241  00144E                     l1204:
  1242  00144E  90D8               	bcf	status,0,c
  1243  001450  3605               	rlcf	___lwdiv@quotient,f,c
  1244  001452  3606               	rlcf	___lwdiv@quotient+1,f,c
  1245  001454  5003               	movf	___lwdiv@divisor,w,c
  1246  001456  5C01               	subwf	___lwdiv@dividend,w,c
  1247  001458  5004               	movf	___lwdiv@divisor+1,w,c
  1248  00145A  5802               	subwfb	___lwdiv@dividend+1,w,c
  1249  00145C  A0D8               	btfss	status,0,c
  1250  00145E  D005               	goto	l1212
  1251  001460  5003               	movf	___lwdiv@divisor,w,c
  1252  001462  5E01               	subwf	___lwdiv@dividend,f,c
  1253  001464  5004               	movf	___lwdiv@divisor+1,w,c
  1254  001466  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1255  001468  8005               	bsf	___lwdiv@quotient,0,c
  1256  00146A                     l1212:
  1257  00146A  90D8               	bcf	status,0,c
  1258  00146C  3204               	rrcf	___lwdiv@divisor+1,f,c
  1259  00146E  3203               	rrcf	___lwdiv@divisor,f,c
  1260  001470  2E07               	decfsz	___lwdiv@counter,f,c
  1261  001472  D7ED               	goto	l1204
  1262  001474                     l593:
  1263  001474  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1264  001478  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1265  00147C  0012               	return		;funcret
  1266  00147E                     __end_of___lwdiv:
  1267                           	opt stack 0
  1268                           tblptru	equ	0xFF8
  1269                           tblptrh	equ	0xFF7
  1270                           tblptrl	equ	0xFF6
  1271                           tablat	equ	0xFF5
  1272                           prodh	equ	0xFF4
  1273                           prodl	equ	0xFF3
  1274                           postinc0	equ	0xFEE
  1275                           wreg	equ	0xFE8
  1276                           indf2	equ	0xFDF
  1277                           postinc2	equ	0xFDE
  1278                           postdec2	equ	0xFDD
  1279                           fsr2h	equ	0xFDA
  1280                           fsr2l	equ	0xFD9
  1281                           status	equ	0xFD8
  1282                           
  1283 ;; *************** function _Send_to_UART *****************
  1284 ;; Defined at:
  1285 ;;		line 125 in file "Current_Monitor.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  i               2    0[COMRAM] int 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;Total ram usage:        2 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_main
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text4
  1313  001506                     __ptext4:
  1314                           	opt stack 0
  1315  001506                     _Send_to_UART:
  1316                           	opt stack 30
  1317                           
  1318                           ;Current_Monitor.c: 128: int i=0;
  1319                           
  1320                           ;incstack = 0
  1321  001506  0E00               	movlw	0
  1322  001508  6E02               	movwf	Send_to_UART@i+1,c
  1323  00150A  0E00               	movlw	0
  1324  00150C  6E01               	movwf	Send_to_UART@i,c
  1325                           
  1326                           ;Current_Monitor.c: 130: while (b[i]!='\0')
  1327  00150E  D010               	goto	l1308
  1328  001510                     l1302:
  1329                           
  1330                           ;Current_Monitor.c: 131: {
  1331                           ;Current_Monitor.c: 133: TXREG1=(b[i++]);
  1332  001510  0E31               	movlw	low _b
  1333  001512  2401               	addwf	Send_to_UART@i,w,c
  1334  001514  6ED9               	movwf	fsr2l,c
  1335  001516  0E00               	movlw	high _b
  1336  001518  2002               	addwfc	Send_to_UART@i+1,w,c
  1337  00151A  6EDA               	movwf	fsr2h,c
  1338  00151C  50DF               	movf	indf2,w,c
  1339  00151E  6EAD               	movwf	4013,c	;volatile
  1340  001520  4A01               	infsnz	Send_to_UART@i,f,c
  1341  001522  2A02               	incf	Send_to_UART@i+1,f,c
  1342                           
  1343                           ;Current_Monitor.c: 134: _delay((unsigned long)((50)*(10000000/4000000.0)));
  1344  001524  0E29               	movlw	41
  1345  001526                     u777:
  1346  001526  2EE8               	decfsz	wreg,f,c
  1347  001528  D7FE               	bra	u777
  1348  00152A  D000               	nop2	
  1349  00152C                     l119:
  1350  00152C  A89E               	btfss	3998,4,c	;volatile
  1351  00152E  D7FE               	goto	l119
  1352  001530                     l1308:
  1353  001530  0E31               	movlw	low _b
  1354  001532  2401               	addwf	Send_to_UART@i,w,c
  1355  001534  6ED9               	movwf	fsr2l,c
  1356  001536  0E00               	movlw	high _b
  1357  001538  2002               	addwfc	Send_to_UART@i+1,w,c
  1358  00153A  6EDA               	movwf	fsr2h,c
  1359  00153C  50DF               	movf	indf2,w,c
  1360  00153E  B4D8               	btfsc	status,2,c
  1361  001540  0012               	return	
  1362  001542  D7E6               	goto	l1302
  1363  001544                     __end_of_Send_to_UART:
  1364                           	opt stack 0
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           prodh	equ	0xFF4
  1370                           prodl	equ	0xFF3
  1371                           postinc0	equ	0xFEE
  1372                           wreg	equ	0xFE8
  1373                           indf2	equ	0xFDF
  1374                           postinc2	equ	0xFDE
  1375                           postdec2	equ	0xFDD
  1376                           fsr2h	equ	0xFDA
  1377                           fsr2l	equ	0xFD9
  1378                           status	equ	0xFD8
  1379                           
  1380 ;; *************** function _Read_UART_Input *****************
  1381 ;; Defined at:
  1382 ;;		line 115 in file "Current_Monitor.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		None
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;Total ram usage:        0 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text5
  1410  0015E2                     __ptext5:
  1411                           	opt stack 0
  1412  0015E2                     _Read_UART_Input:
  1413                           	opt stack 30
  1414                           
  1415                           ;Current_Monitor.c: 118: RCSTA1bits.CREN=1;
  1416                           
  1417                           ;incstack = 0
  1418  0015E2  88AB               	bsf	4011,4,c	;volatile
  1419  0015E4                     l111:
  1420  0015E4  AA9E               	btfss	3998,5,c	;volatile
  1421  0015E6  D7FE               	goto	l111
  1422                           
  1423                           ;Current_Monitor.c: 120: Keyboard=RCREG1;
  1424  0015E8  CFAE F02B          	movff	4014,_Keyboard	;volatile
  1425  0015EC  0012               	return		;funcret
  1426  0015EE                     __end_of_Read_UART_Input:
  1427                           	opt stack 0
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           prodh	equ	0xFF4
  1433                           prodl	equ	0xFF3
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           indf2	equ	0xFDF
  1437                           postinc2	equ	0xFDE
  1438                           postdec2	equ	0xFDD
  1439                           fsr2h	equ	0xFDA
  1440                           fsr2l	equ	0xFD9
  1441                           status	equ	0xFD8
  1442                           
  1443 ;; *************** function _Initialize_UART *****************
  1444 ;; Defined at:
  1445 ;;		line 100 in file "Current_Monitor.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  1    wreg      void 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; This function calls:
  1466 ;;		Nothing
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text6
  1473  0015CE                     __ptext6:
  1474                           	opt stack 0
  1475  0015CE                     _Initialize_UART:
  1476                           	opt stack 30
  1477                           
  1478                           ;Current_Monitor.c: 102: TRISCbits.RC7=1;
  1479                           
  1480                           ;incstack = 0
  1481  0015CE  8E94               	bsf	3988,7,c	;volatile
  1482                           
  1483                           ;Current_Monitor.c: 103: TRISCbits.RC6=0;
  1484  0015D0  9C94               	bcf	3988,6,c	;volatile
  1485                           
  1486                           ;Current_Monitor.c: 106: TXSTA1bits.SYNC=0;
  1487  0015D2  98AC               	bcf	4012,4,c	;volatile
  1488                           
  1489                           ;Current_Monitor.c: 107: TXSTA1bits.BRGH=0;
  1490  0015D4  94AC               	bcf	4012,2,c	;volatile
  1491                           
  1492                           ;Current_Monitor.c: 108: BAUDCON1bits.BRG16=0;
  1493  0015D6  967E               	bcf	3966,3,c	;volatile
  1494                           
  1495                           ;Current_Monitor.c: 109: SPBRG1=15;
  1496  0015D8  0E0F               	movlw	15
  1497  0015DA  6EAF               	movwf	4015,c	;volatile
  1498                           
  1499                           ;Current_Monitor.c: 110: RCSTA1bits.SPEN=1;
  1500  0015DC  8EAB               	bsf	4011,7,c	;volatile
  1501                           
  1502                           ;Current_Monitor.c: 111: TXSTA1bits.TXEN=1;
  1503  0015DE  8AAC               	bsf	4012,5,c	;volatile
  1504  0015E0  0012               	return		;funcret
  1505  0015E2                     __end_of_Initialize_UART:
  1506                           	opt stack 0
  1507                           tblptru	equ	0xFF8
  1508                           tblptrh	equ	0xFF7
  1509                           tblptrl	equ	0xFF6
  1510                           tablat	equ	0xFF5
  1511                           prodh	equ	0xFF4
  1512                           prodl	equ	0xFF3
  1513                           postinc0	equ	0xFEE
  1514                           wreg	equ	0xFE8
  1515                           indf2	equ	0xFDF
  1516                           postinc2	equ	0xFDE
  1517                           postdec2	equ	0xFDD
  1518                           fsr2h	equ	0xFDA
  1519                           fsr2l	equ	0xFD9
  1520                           status	equ	0xFD8
  1521                           
  1522 ;; *************** function _Initialize_Analog *****************
  1523 ;; Defined at:
  1524 ;;		line 140 in file "Current_Monitor.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text7
  1552  0015B2                     __ptext7:
  1553                           	opt stack 0
  1554  0015B2                     _Initialize_Analog:
  1555                           	opt stack 30
  1556                           
  1557                           ;Current_Monitor.c: 144: TRISA=0xff;
  1558                           
  1559                           ;incstack = 0
  1560  0015B2  6892               	setf	3986,c	;volatile
  1561                           
  1562                           ;Current_Monitor.c: 145: TRISD=0x00;
  1563  0015B4  0E00               	movlw	0
  1564  0015B6  6E95               	movwf	3989,c	;volatile
  1565                           
  1566                           ;Current_Monitor.c: 146: PORTD=0x00;
  1567  0015B8  0E00               	movlw	0
  1568  0015BA  6E83               	movwf	3971,c	;volatile
  1569                           
  1570                           ;Current_Monitor.c: 147: PORTA=0x00;
  1571  0015BC  0E00               	movlw	0
  1572  0015BE  6E80               	movwf	3968,c	;volatile
  1573                           
  1574                           ;Current_Monitor.c: 150: ADCON0=0b00000001;
  1575  0015C0  0E01               	movlw	1
  1576  0015C2  6EC2               	movwf	4034,c	;volatile
  1577                           
  1578                           ;Current_Monitor.c: 151: ADCON1=0b00000000;
  1579  0015C4  0E00               	movlw	0
  1580  0015C6  6EC1               	movwf	4033,c	;volatile
  1581                           
  1582                           ;Current_Monitor.c: 152: ADCON2=0b00000000;
  1583  0015C8  0E00               	movlw	0
  1584  0015CA  6EC0               	movwf	4032,c	;volatile
  1585  0015CC  0012               	return		;funcret
  1586  0015CE                     __end_of_Initialize_Analog:
  1587                           	opt stack 0
  1588                           tblptru	equ	0xFF8
  1589                           tblptrh	equ	0xFF7
  1590                           tblptrl	equ	0xFF6
  1591                           tablat	equ	0xFF5
  1592                           prodh	equ	0xFF4
  1593                           prodl	equ	0xFF3
  1594                           postinc0	equ	0xFEE
  1595                           wreg	equ	0xFE8
  1596                           indf2	equ	0xFDF
  1597                           postinc2	equ	0xFDE
  1598                           postdec2	equ	0xFDD
  1599                           fsr2h	equ	0xFDA
  1600                           fsr2l	equ	0xFD9
  1601                           status	equ	0xFD8
  1602                           
  1603 ;; *************** function _EEPROM_Write *****************
  1604 ;; Defined at:
  1605 ;;		line 182 in file "Current_Monitor.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  address         1    wreg     unsigned char 
  1608 ;;  value           2    0[COMRAM] PTR unsigned char 
  1609 ;;		 -> RAM(3935), 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  address         1    2[COMRAM] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;Total ram usage:        3 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text8
  1635  00156E                     __ptext8:
  1636                           	opt stack 0
  1637  00156E                     _EEPROM_Write:
  1638                           	opt stack 30
  1639                           
  1640                           ;incstack = 0
  1641                           ;EEPROM_Write@address stored from wreg
  1642  00156E  6E03               	movwf	EEPROM_Write@address,c
  1643                           
  1644                           ;Current_Monitor.c: 185: EECON1bits.WREN=1;
  1645  001570  84A6               	bsf	4006,2,c	;volatile
  1646                           
  1647                           ;Current_Monitor.c: 186: EEADR=address ;
  1648  001572  C003  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  1649                           
  1650                           ;Current_Monitor.c: 187: EEDATA=value;
  1651  001576  C001  FFA8         	movff	EEPROM_Write@value,4008	;volatile
  1652                           
  1653                           ;Current_Monitor.c: 188: EECON1bits.EEPGD=0;
  1654  00157A  9EA6               	bcf	4006,7,c	;volatile
  1655                           
  1656                           ;Current_Monitor.c: 189: EECON1bits.CFGS=0;
  1657  00157C  9CA6               	bcf	4006,6,c	;volatile
  1658                           
  1659                           ;Current_Monitor.c: 190: INTCONbits.GIE=0;
  1660  00157E  9EF2               	bcf	intcon,7,c	;volatile
  1661                           
  1662                           ;Current_Monitor.c: 193: EECON2=0x55;
  1663  001580  0E55               	movlw	85
  1664  001582  6EA7               	movwf	4007,c	;volatile
  1665                           
  1666                           ;Current_Monitor.c: 194: EECON2=0xAA;
  1667  001584  0EAA               	movlw	170
  1668  001586  6EA7               	movwf	4007,c	;volatile
  1669                           
  1670                           ;Current_Monitor.c: 195: EECON1bits.WR=1;
  1671  001588  82A6               	bsf	4006,1,c	;volatile
  1672                           
  1673                           ;Current_Monitor.c: 198: INTCONbits.GIE=1;
  1674  00158A  8EF2               	bsf	intcon,7,c	;volatile
  1675  00158C                     l141:
  1676  00158C  B2A6               	btfsc	4006,1,c	;volatile
  1677  00158E  D7FE               	goto	l141
  1678                           
  1679                           ;Current_Monitor.c: 200: EECON1bits.WREN = 0;
  1680  001590  94A6               	bcf	4006,2,c	;volatile
  1681  001592  0012               	return		;funcret
  1682  001594                     __end_of_EEPROM_Write:
  1683                           	opt stack 0
  1684                           tblptru	equ	0xFF8
  1685                           tblptrh	equ	0xFF7
  1686                           tblptrl	equ	0xFF6
  1687                           tablat	equ	0xFF5
  1688                           prodh	equ	0xFF4
  1689                           prodl	equ	0xFF3
  1690                           intcon	equ	0xFF2
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           indf2	equ	0xFDF
  1694                           postinc2	equ	0xFDE
  1695                           postdec2	equ	0xFDD
  1696                           fsr2h	equ	0xFDA
  1697                           fsr2l	equ	0xFD9
  1698                           status	equ	0xFD8
  1699                           
  1700 ;; *************** function _EEPROM_Read *****************
  1701 ;; Defined at:
  1702 ;;		line 205 in file "Current_Monitor.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  address         1    wreg     unsigned char 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  address         1   10[COMRAM] unsigned char 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;Total ram usage:        1 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    2
  1723 ;; This function calls:
  1724 ;;		_Average_Function
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text9
  1731  001544                     __ptext9:
  1732                           	opt stack 0
  1733  001544                     _EEPROM_Read:
  1734                           	opt stack 28
  1735                           
  1736                           ;incstack = 0
  1737                           ;EEPROM_Read@address stored from wreg
  1738  001544  6E0B               	movwf	EEPROM_Read@address,c
  1739                           
  1740                           ;Current_Monitor.c: 208: EEADR=address;
  1741  001546  C00B  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  1742                           
  1743                           ;Current_Monitor.c: 209: EECON1bits.EEPGD=0;
  1744  00154A  9EA6               	bcf	4006,7,c	;volatile
  1745                           
  1746                           ;Current_Monitor.c: 210: EECON1bits.CFGS=0;
  1747  00154C  9CA6               	bcf	4006,6,c	;volatile
  1748                           
  1749                           ;Current_Monitor.c: 211: EECON1bits.RD=1;
  1750  00154E  80A6               	bsf	4006,0,c	;volatile
  1751                           
  1752                           ;Current_Monitor.c: 212: result_EEPROM=EEDATA;
  1753  001550  CFA8 F02D          	movff	4008,_result_EEPROM	;volatile
  1754                           
  1755                           ;Current_Monitor.c: 213: Sample_for_Average[x++]=result_EEPROM;
  1756  001554  0E60               	movlw	low _Sample_for_Average
  1757  001556  2427               	addwf	_x,w,c
  1758  001558  6ED9               	movwf	fsr2l,c
  1759  00155A  0E00               	movlw	high _Sample_for_Average
  1760  00155C  2028               	addwfc	_x+1,w,c
  1761  00155E  6EDA               	movwf	fsr2h,c
  1762  001560  C02D  FFDF         	movff	_result_EEPROM,indf2
  1763  001564  4A27               	infsnz	_x,f,c
  1764  001566  2A28               	incf	_x+1,f,c
  1765                           
  1766                           ;Current_Monitor.c: 214: Average_Function();
  1767  001568  EC3F  F00A         	call	_Average_Function	;wreg free
  1768  00156C  0012               	return		;funcret
  1769  00156E                     __end_of_EEPROM_Read:
  1770                           	opt stack 0
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           prodh	equ	0xFF4
  1776                           prodl	equ	0xFF3
  1777                           intcon	equ	0xFF2
  1778                           postinc0	equ	0xFEE
  1779                           wreg	equ	0xFE8
  1780                           indf2	equ	0xFDF
  1781                           postinc2	equ	0xFDE
  1782                           postdec2	equ	0xFDD
  1783                           fsr2h	equ	0xFDA
  1784                           fsr2l	equ	0xFD9
  1785                           status	equ	0xFD8
  1786                           
  1787 ;; *************** function _Average_Function *****************
  1788 ;; Defined at:
  1789 ;;		line 238 in file "Current_Monitor.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  x               2    8[COMRAM] int 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1807 ;;Total ram usage:        2 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:    1
  1810 ;; This function calls:
  1811 ;;		___awdiv
  1812 ;; This function is called by:
  1813 ;;		_EEPROM_Read
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text10
  1818  00147E                     __ptext10:
  1819                           	opt stack 0
  1820  00147E                     _Average_Function:
  1821                           	opt stack 28
  1822                           
  1823                           ;Current_Monitor.c: 241: for(int x=1;x<=50;x++)
  1824                           
  1825                           ;incstack = 0
  1826  00147E  0E00               	movlw	0
  1827  001480  6E0A               	movwf	Average_Function@x+1,c
  1828  001482  0E01               	movlw	1
  1829  001484  6E09               	movwf	Average_Function@x,c
  1830  001486                     l1182:
  1831  001486  BE0A               	btfsc	Average_Function@x+1,7,c
  1832  001488  D006               	goto	l1186
  1833  00148A  500A               	movf	Average_Function@x+1,w,c
  1834  00148C  E10F               	bnz	l1192
  1835  00148E  0E33               	movlw	51
  1836  001490  5C09               	subwf	Average_Function@x,w,c
  1837  001492  B0D8               	btfsc	status,0,c
  1838  001494  D00B               	goto	l1192
  1839  001496                     l1186:
  1840                           
  1841                           ;Current_Monitor.c: 242: {
  1842                           ;Current_Monitor.c: 243: Average +=Sample_for_Average[x];
  1843  001496  0E60               	movlw	low _Sample_for_Average
  1844  001498  2409               	addwf	Average_Function@x,w,c
  1845  00149A  6ED9               	movwf	fsr2l,c
  1846  00149C  0E00               	movlw	high _Sample_for_Average
  1847  00149E  200A               	addwfc	Average_Function@x+1,w,c
  1848  0014A0  6EDA               	movwf	fsr2h,c
  1849  0014A2  50DF               	movf	indf2,w,c
  1850  0014A4  262C               	addwf	_Average,f,c
  1851  0014A6  4A09               	infsnz	Average_Function@x,f,c
  1852  0014A8  2A0A               	incf	Average_Function@x+1,f,c
  1853  0014AA  D7ED               	goto	l1182
  1854  0014AC                     l1192:
  1855                           
  1856                           ;Current_Monitor.c: 245: }
  1857                           ;Current_Monitor.c: 246: Average=Average/50;
  1858  0014AC  C02C  F001         	movff	_Average,___awdiv@dividend
  1859  0014B0  6A02               	clrf	___awdiv@dividend+1,c
  1860  0014B2  0E00               	movlw	0
  1861  0014B4  6E04               	movwf	___awdiv@divisor+1,c
  1862  0014B6  0E32               	movlw	50
  1863  0014B8  6E03               	movwf	___awdiv@divisor,c
  1864  0014BA  ECA5  F009         	call	___awdiv	;wreg free
  1865  0014BE  5001               	movf	?___awdiv,w,c
  1866  0014C0  6E2C               	movwf	_Average,c
  1867  0014C2  0012               	return		;funcret
  1868  0014C4                     __end_of_Average_Function:
  1869                           	opt stack 0
  1870                           tblptru	equ	0xFF8
  1871                           tblptrh	equ	0xFF7
  1872                           tblptrl	equ	0xFF6
  1873                           tablat	equ	0xFF5
  1874                           prodh	equ	0xFF4
  1875                           prodl	equ	0xFF3
  1876                           intcon	equ	0xFF2
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           indf2	equ	0xFDF
  1880                           postinc2	equ	0xFDE
  1881                           postdec2	equ	0xFDD
  1882                           fsr2h	equ	0xFDA
  1883                           fsr2l	equ	0xFD9
  1884                           status	equ	0xFD8
  1885                           
  1886 ;; *************** function ___awdiv *****************
  1887 ;; Defined at:
  1888 ;;		line 8 in file "/Applications/microchip/xc8/v1.41/sources/common/awdiv.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  dividend        2    0[COMRAM] int 
  1891 ;;  divisor         2    2[COMRAM] int 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  quotient        2    6[COMRAM] int 
  1894 ;;  sign            1    5[COMRAM] unsigned char 
  1895 ;;  counter         1    4[COMRAM] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  2    0[COMRAM] int 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;Total ram usage:        8 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_Average_Function
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text11
  1919  00134A                     __ptext11:
  1920                           	opt stack 0
  1921  00134A                     ___awdiv:
  1922                           	opt stack 28
  1923                           
  1924                           ;incstack = 0
  1925  00134A  0E00               	movlw	0
  1926  00134C  6E06               	movwf	___awdiv@sign,c
  1927  00134E  AE04               	btfss	___awdiv@divisor+1,7,c
  1928  001350  D006               	goto	l1144
  1929  001352  6C03               	negf	___awdiv@divisor,c
  1930  001354  1E04               	comf	___awdiv@divisor+1,f,c
  1931  001356  B0D8               	btfsc	status,0,c
  1932  001358  2A04               	incf	___awdiv@divisor+1,f,c
  1933  00135A  0E01               	movlw	1
  1934  00135C  6E06               	movwf	___awdiv@sign,c
  1935  00135E                     l1144:
  1936  00135E  AE02               	btfss	___awdiv@dividend+1,7,c
  1937  001360  D006               	goto	l1150
  1938  001362  6C01               	negf	___awdiv@dividend,c
  1939  001364  1E02               	comf	___awdiv@dividend+1,f,c
  1940  001366  B0D8               	btfsc	status,0,c
  1941  001368  2A02               	incf	___awdiv@dividend+1,f,c
  1942  00136A  0E01               	movlw	1
  1943  00136C  1A06               	xorwf	___awdiv@sign,f,c
  1944  00136E                     l1150:
  1945  00136E  0E00               	movlw	0
  1946  001370  6E08               	movwf	___awdiv@quotient+1,c
  1947  001372  0E00               	movlw	0
  1948  001374  6E07               	movwf	___awdiv@quotient,c
  1949  001376  5003               	movf	___awdiv@divisor,w,c
  1950  001378  1004               	iorwf	___awdiv@divisor+1,w,c
  1951  00137A  B4D8               	btfsc	status,2,c
  1952  00137C  D01C               	goto	l1172
  1953  00137E  0E01               	movlw	1
  1954  001380  6E05               	movwf	___awdiv@counter,c
  1955  001382  D004               	goto	l1158
  1956  001384                     l1156:
  1957  001384  90D8               	bcf	status,0,c
  1958  001386  3603               	rlcf	___awdiv@divisor,f,c
  1959  001388  3604               	rlcf	___awdiv@divisor+1,f,c
  1960  00138A  2A05               	incf	___awdiv@counter,f,c
  1961  00138C                     l1158:
  1962  00138C  AE04               	btfss	___awdiv@divisor+1,7,c
  1963  00138E  D7FA               	goto	l1156
  1964  001390                     l1160:
  1965  001390  90D8               	bcf	status,0,c
  1966  001392  3607               	rlcf	___awdiv@quotient,f,c
  1967  001394  3608               	rlcf	___awdiv@quotient+1,f,c
  1968  001396  5003               	movf	___awdiv@divisor,w,c
  1969  001398  5C01               	subwf	___awdiv@dividend,w,c
  1970  00139A  5004               	movf	___awdiv@divisor+1,w,c
  1971  00139C  5802               	subwfb	___awdiv@dividend+1,w,c
  1972  00139E  A0D8               	btfss	status,0,c
  1973  0013A0  D005               	goto	l1168
  1974  0013A2  5003               	movf	___awdiv@divisor,w,c
  1975  0013A4  5E01               	subwf	___awdiv@dividend,f,c
  1976  0013A6  5004               	movf	___awdiv@divisor+1,w,c
  1977  0013A8  5A02               	subwfb	___awdiv@dividend+1,f,c
  1978  0013AA  8007               	bsf	___awdiv@quotient,0,c
  1979  0013AC                     l1168:
  1980  0013AC  90D8               	bcf	status,0,c
  1981  0013AE  3204               	rrcf	___awdiv@divisor+1,f,c
  1982  0013B0  3203               	rrcf	___awdiv@divisor,f,c
  1983  0013B2  2E05               	decfsz	___awdiv@counter,f,c
  1984  0013B4  D7ED               	goto	l1160
  1985  0013B6                     l1172:
  1986  0013B6  5006               	movf	___awdiv@sign,w,c
  1987  0013B8  B4D8               	btfsc	status,2,c
  1988  0013BA  D004               	goto	l1176
  1989  0013BC  6C07               	negf	___awdiv@quotient,c
  1990  0013BE  1E08               	comf	___awdiv@quotient+1,f,c
  1991  0013C0  B0D8               	btfsc	status,0,c
  1992  0013C2  2A08               	incf	___awdiv@quotient+1,f,c
  1993  0013C4                     l1176:
  1994  0013C4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1995  0013C8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1996  0013CC  0012               	return	
  1997  0013CE                     __end_of___awdiv:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           prodh	equ	0xFF4
  2004                           prodl	equ	0xFF3
  2005                           intcon	equ	0xFF2
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           indf2	equ	0xFDF
  2009                           postinc2	equ	0xFDE
  2010                           postdec2	equ	0xFDD
  2011                           fsr2h	equ	0xFDA
  2012                           fsr2l	equ	0xFD9
  2013                           status	equ	0xFD8
  2014                           
  2015 ;; *************** function _Analog_Capture_ON *****************
  2016 ;; Defined at:
  2017 ;;		line 157 in file "Current_Monitor.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  x               2    2[COMRAM] int 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;Total ram usage:        4 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044                           	psect	text12
  2045  0013CE                     __ptext12:
  2046                           	opt stack 0
  2047  0013CE                     _Analog_Capture_ON:
  2048                           	opt stack 30
  2049                           
  2050                           ;Current_Monitor.c: 160: for(int x=0;x<=50;x++)
  2051                           
  2052                           ;incstack = 0
  2053  0013CE  0E00               	movlw	0
  2054  0013D0  6E04               	movwf	Analog_Capture_ON@x+1,c
  2055  0013D2  0E00               	movlw	0
  2056  0013D4  6E03               	movwf	Analog_Capture_ON@x,c
  2057  0013D6                     l1316:
  2058  0013D6  BE04               	btfsc	Analog_Capture_ON@x+1,7,c
  2059  0013D8  D006               	goto	l129
  2060  0013DA  5004               	movf	Analog_Capture_ON@x+1,w,c
  2061  0013DC  E126               	bnz	l135
  2062  0013DE  0E33               	movlw	51
  2063  0013E0  5C03               	subwf	Analog_Capture_ON@x,w,c
  2064  0013E2  B0D8               	btfsc	status,0,c
  2065  0013E4  0012               	return	
  2066  0013E6                     l129:
  2067                           
  2068                           ;Current_Monitor.c: 161: {
  2069                           ;Current_Monitor.c: 162: ADCON0bits.GO_DONE=1;
  2070  0013E6  82C2               	bsf	4034,1,c	;volatile
  2071  0013E8                     l131:
  2072  0013E8  B2C2               	btfsc	4034,1,c	;volatile
  2073  0013EA  D7FE               	goto	l131
  2074                           
  2075                           ;Current_Monitor.c: 164: Sample[x]=ADRESH;
  2076  0013EC  0EC4               	movlw	low _Sample
  2077  0013EE  2403               	addwf	Analog_Capture_ON@x,w,c
  2078  0013F0  6ED9               	movwf	fsr2l,c
  2079  0013F2  0E00               	movlw	high _Sample
  2080  0013F4  2004               	addwfc	Analog_Capture_ON@x+1,w,c
  2081  0013F6  6EDA               	movwf	fsr2h,c
  2082  0013F8  CFC4 FFDF          	movff	4036,indf2	;volatile
  2083                           
  2084                           ;Current_Monitor.c: 166: _delay((unsigned long)((500)*(10000000/4000.0)));
  2085  0013FC  0E07               	movlw	7
  2086  0013FE  6E02               	movwf	(??_Analog_Capture_ON+1)& (0+255),c
  2087  001400  0E58               	movlw	88
  2088  001402  6E01               	movwf	??_Analog_Capture_ON& (0+255),c
  2089  001404  0E5A               	movlw	90
  2090  001406                     u787:
  2091  001406  2EE8               	decfsz	wreg,f,c
  2092  001408  D7FE               	bra	u787
  2093  00140A  2E01               	decfsz	??_Analog_Capture_ON& (0+255),f,c
  2094  00140C  D7FC               	bra	u787
  2095  00140E  2E02               	decfsz	(??_Analog_Capture_ON+1)& (0+255),f,c
  2096  001410  D7FA               	bra	u787
  2097                           
  2098                           ;Current_Monitor.c: 167: if(x==50)
  2099  001412  0E32               	movlw	50
  2100  001414  1803               	xorwf	Analog_Capture_ON@x,w,c
  2101  001416  1004               	iorwf	Analog_Capture_ON@x+1,w,c
  2102  001418  A4D8               	btfss	status,2,c
  2103  00141A  D004               	goto	l1328
  2104                           
  2105                           ;Current_Monitor.c: 168: {
  2106                           ;Current_Monitor.c: 169: x=51;
  2107  00141C  0E00               	movlw	0
  2108  00141E  6E04               	movwf	Analog_Capture_ON@x+1,c
  2109  001420  0E33               	movlw	51
  2110  001422  6E03               	movwf	Analog_Capture_ON@x,c
  2111  001424                     l1328:
  2112  001424  4A03               	infsnz	Analog_Capture_ON@x,f,c
  2113  001426  2A04               	incf	Analog_Capture_ON@x+1,f,c
  2114  001428  D7D6               	goto	l1316
  2115  00142A                     l135:
  2116  00142A  0012               	return		;funcret
  2117  00142C                     __end_of_Analog_Capture_ON:
  2118                           	opt stack 0
  2119                           tblptru	equ	0xFF8
  2120                           tblptrh	equ	0xFF7
  2121                           tblptrl	equ	0xFF6
  2122                           tablat	equ	0xFF5
  2123                           prodh	equ	0xFF4
  2124                           prodl	equ	0xFF3
  2125                           intcon	equ	0xFF2
  2126                           postinc0	equ	0xFEE
  2127                           wreg	equ	0xFE8
  2128                           indf2	equ	0xFDF
  2129                           postinc2	equ	0xFDE
  2130                           postdec2	equ	0xFDD
  2131                           fsr2h	equ	0xFDA
  2132                           fsr2l	equ	0xFD9
  2133                           status	equ	0xFD8
  2134                           
  2135 ;; *************** function _Analog_Capture_OFF *****************
  2136 ;; Defined at:
  2137 ;;		line 175 in file "Current_Monitor.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		None
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2155 ;;Total ram usage:        0 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; This function calls:
  2158 ;;		Nothing
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text13
  2165  0015EE                     __ptext13:
  2166                           	opt stack 0
  2167  0015EE                     _Analog_Capture_OFF:
  2168                           	opt stack 30
  2169                           
  2170                           ;Current_Monitor.c: 177: ADCON0bits.ADON=0;
  2171                           
  2172                           ;incstack = 0
  2173  0015EE  90C2               	bcf	4034,0,c	;volatile
  2174  0015F0  0012               	return		;funcret
  2175  0015F2                     __end_of_Analog_Capture_OFF:
  2176                           	opt stack 0
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           prodh	equ	0xFF4
  2182                           prodl	equ	0xFF3
  2183                           intcon	equ	0xFF2
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           indf2	equ	0xFDF
  2187                           postinc2	equ	0xFDE
  2188                           postdec2	equ	0xFDD
  2189                           fsr2h	equ	0xFDA
  2190                           fsr2l	equ	0xFD9
  2191                           status	equ	0xFD8
  2192                           tblptru	equ	0xFF8
  2193                           tblptrh	equ	0xFF7
  2194                           tblptrl	equ	0xFF6
  2195                           tablat	equ	0xFF5
  2196                           prodh	equ	0xFF4
  2197                           prodl	equ	0xFF3
  2198                           intcon	equ	0xFF2
  2199                           postinc0	equ	0xFEE
  2200                           wreg	equ	0xFE8
  2201                           indf2	equ	0xFDF
  2202                           postinc2	equ	0xFDE
  2203                           postdec2	equ	0xFDD
  2204                           fsr2h	equ	0xFDA
  2205                           fsr2l	equ	0xFD9
  2206                           status	equ	0xFD8
  2207                           
  2208                           	psect	rparam
  2209  0000                     tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           prodh	equ	0xFF4
  2214                           prodl	equ	0xFF3
  2215                           intcon	equ	0xFF2
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           indf2	equ	0xFDF
  2219                           postinc2	equ	0xFDE
  2220                           postdec2	equ	0xFDD
  2221                           fsr2h	equ	0xFDA
  2222                           fsr2l	equ	0xFD9
  2223                           status	equ	0xFD8


Data Sizes:
    Strings     179
    Constant    10
    Data        0
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     38      51
    BANK0           160      0     150
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 55
		 -> STR_5(CODE[36]), STR_4(CODE[29]), STR_3(CODE[20]), STR_2(CODE[55]), 
		 -> STR_1(CODE[39]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 3
		 -> b(COMRAM[3]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    EEPROM_Write@value	PTR unsigned char  size(2) Largest target is 3935
		 -> RAM(DATA[3935]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _EEPROM_Read->_Average_Function
    _Average_Function->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2621
                                             28 COMRAM    10    10      0
                 _Analog_Capture_OFF
                  _Analog_Capture_ON
                        _EEPROM_Read
                       _EEPROM_Write
                  _Initialize_Analog
                    _Initialize_UART
                    _Read_UART_Input
                       _Send_to_UART
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    17      8    1694
                                             12 COMRAM    16     8      8
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     287
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     290
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Send_to_UART                                         2     2      0      46
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Read_UART_Input                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_UART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_Analog                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         3     1      2     108
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Read                                          1     1      0     518
                                             10 COMRAM     1     1      0
                   _Average_Function
 ---------------------------------------------------------------------------------
 (2) _Average_Function                                     2     2      0     496
                                              8 COMRAM     2     2      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Analog_Capture_ON                                    4     4      0      91
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Analog_Capture_OFF                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Analog_Capture_OFF
   _Analog_Capture_ON
   _EEPROM_Read
     _Average_Function
       ___awdiv
   _EEPROM_Write
   _Initialize_Analog
   _Initialize_UART
   _Read_UART_Input
   _Send_to_UART
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      96       5       93.8%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     26      33       1       53.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C9      32        0.0%
DATA                 0      0      C9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Apr 13 16:04:46 2017

                          _a 0029                            _b 0031                            _x 0027  
               ___awdiv@sign 0006                  __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000  
                __CFG_OSC$HS 000000                 __CFG_CP4$OFF 000000                 __CFG_CP5$OFF 000000  
               __CFG_CP6$OFF 000000            ??_Read_UART_Input 0001                 __CFG_CP7$OFF 000000  
                __CFG_LVP$ON 000000                          l111 15E4                          l131 13E8  
                        l141 158C                          l135 142A                          l119 152C  
                        l129 13E6                          l603 14FC                          l593 1474  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                          u777 1526  
                        u787 1406                          prod 000FF3                          wreg 000FE8  
                 _TXSTA1bits 000FAC                 __CFG_MODE$MC 000000                 __CFG_WDT$OFF 000000  
                       l1200 1442                         l1202 144A                         l1212 146A  
                       l1204 144E                         l1220 14D2                         l1150 136E  
                       l1302 1510                         l1222 14DA                         l1160 1390  
                       l1144 135E                         l1224 14DE                         l1400 1280  
                       l1242 10CA                         l1316 13D6                         l1156 1384  
                       l1172 13B6                         l1308 1530                         l1228 14F2  
                       l1420 12D0                         l1158 138C                         l1182 1486  
                       l1254 1112                         l1328 1424                         l1176 13C4  
                       l1168 13AC                         l1192 14AC                         l1264 113A  
                       l1248 10E4                         l1424 12E0                         l1186 1496  
                       l1266 113E                         l1292 11EA                         l1284 118C  
                       l1286 1192                         l1278 1170                         l1294 11F2  
                       l1438 131E                         l1296 120E                         l1392 1252  
                       l1398 127A                         STR_1 1042                         STR_2 100B  
                       STR_3 10AA                         STR_4 108D                         STR_5 1069  
               _Voltage_Drop 0030                         _main 121C                         fsr2h 000FDA  
                       indf2 000FDF                         fsr2l 000FD9                         prodh 000FF4  
                       prodl 000FF3                         start 0000                __CFG_IESO$OFF 000000  
              __CFG_MCLRE$ON 000000                 ___param_bank 000000         __end_of_EEPROM_Write 1594  
               _BAUDCON1bits 000F7E                __CFG_WAIT$OFF 000000                        ?_main 0001  
            __end_of___awdiv 13CE                        _EEADR 000FA9              ___awdiv@divisor 0003  
            __end_of___lwdiv 147E              __end_of___lwmod 1506              ___awdiv@counter 0005  
                      _PORTA 000F80                        _PORTD 000F83                        _TRISA 000F92  
                      _TRISD 000F95                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
              __CFG_WRT4$OFF 000000                __CFG_WRT5$OFF 000000                __CFG_WRT6$OFF 000000  
              __CFG_WRT7$OFF 000000               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000  
             __CFG_EBTR4$OFF 000000               __CFG_EBTR5$OFF 000000               __CFG_EBTR6$OFF 000000  
             __CFG_EBTR7$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000              __end_of_dpowers 100B  
                      main@i 001F                        main@x 0023                        main@y 0024  
                      tablat 000FF5                        status 000FD8              __end_of_sprintf 121C  
       __size_of_EEPROM_Read 002A              __initialization 1594                 __end_of_main 134A  
                     ??_main 001D             _Average_Function 147E                __activetblptr 000003  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       _ADCON2 000FC0  
                     _ADRESH 000FC4                       _EEDATA 000FA8                       _EECON2 000FA7  
           ___awdiv@dividend 0001              __CFG_BBSIZ$BB2K 000000                       _RCREG1 000FAE  
                     _SPBRG1 000FAF                       _TXREG1 000FAD           _Sample_for_Average 0060  
             __CFG_XINST$OFF 000000                       _Sample 00C4                    ??___awdiv 0005  
                  ??___lwdiv 0005                Send_to_UART@i 0001                    ??___lwmod 000C  
                     clear_0 159A                       clear_1 15A6             ___awdiv@quotient 0007  
               __mediumconst 0000                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                    ??_sprintf 0015                   __accesstop 0060  
    __end_of__initialization 15AC            EEPROM_Write@value 0001                ___rparam_used 000001  
      __size_of_EEPROM_Write 0026              _Read_UART_Input 15E2                ?_Send_to_UART 0001  
             __pcstackCOMRAM 0001     __size_of_Initialize_UART 0014                 _EEPROM_Write 156E  
                 __pbssBANK0 0060   __end_of_Analog_Capture_OFF 15F2               ??_Send_to_UART 0001  
    __end_of_Read_UART_Input 15EE                      _Average 002C     __end_of_Average_Function 14C4  
                    _Current 002F                      __Hparam 0000                      __Lparam 0000  
                    ___awdiv 134A                      ___lwdiv 142C                      ___lwmod 14C4  
               __psmallconst 1000              __CFG_STVREN$OFF 000000                      __pcinit 1594  
                    __ramtop 1000                      __ptext0 121C                      __ptext1 10C0  
                    __ptext2 14C4                      __ptext3 142C                      __ptext4 1506  
                    __ptext5 15E2                      __ptext6 15CE                      __ptext7 15B2  
                    __ptext8 156E                      __ptext9 1544                      _dpowers 1001  
          ??_Initialize_UART 0001                      _sprintf 10C0         end_of_initialization 15AC  
              ??_EEPROM_Read 000B                      postdec2 000FDD                      postinc0 000FEE  
                    postinc2 000FDE                    _TRISCbits 000F94         __end_of_Send_to_UART 1544  
           ?_Read_UART_Input 0001          __end_of_EEPROM_Read 156E          start_initialization 1594  
         _Analog_Capture_OFF 15EE             __CFG_LPT1OSC$OFF 000000          ?_Analog_Capture_OFF 0001  
                __pbssCOMRAM 0027                  sprintf@flag 0018                  _EEPROM_Read 1544  
                sprintf@prec 0019                  _EEPROM_read 0092         ??_Analog_Capture_OFF 0001  
          ?_Average_Function 0001             ___lwdiv@dividend 0001            __CFG_CCP2MX$PORTC 000000  
         ??_Average_Function 0009              _Initialize_UART 15CE                     ?___awdiv 0001  
                   ?___lwdiv 0001                     ?___lwmod 0008        __size_of_Send_to_UART 003E  
          _Initialize_Analog 15B2                  __smallconst 1000           ?_Initialize_Analog 0001  
           ___lwdiv@quotient 0005                     ?_sprintf 000D          ??_Initialize_Analog 0001  
                   _PIR1bits 000F9E        __CFG_DATABW$DATA16BIT 000000                 _Send_to_UART 1506  
                   _RCONbits 000FD0             __CFG_WDTPS$32768 000000    __end_of_Initialize_Analog 15CE  
          __CFG_ECCPMX$PORTE 000000                   _ADCON0bits 000FC2                    main@i_616 0021  
                  main@x_613 0025                     _Keyboard 002B      __end_of_Initialize_UART 15E2  
                 _EECON1bits 000FA6                     __Hrparam 0000                     __Lrparam 0000  
                   _Resistor 002E           __CFG_BOREN$SBORDIS 000000            _Analog_Capture_ON 13CE  
           __size_of___awdiv 0084           ?_Analog_Capture_ON 0001             __size_of___lwdiv 0052  
           __size_of___lwmod 0042                _result_EEPROM 002D                   sprintf@val 001A  
        ??_Analog_Capture_ON 0001              ___lwdiv@divisor 0003              ___lwdiv@counter 0007  
                   __ptext10 147E                     __ptext11 134A                     __ptext12 13CE  
                   __ptext13 15EE                ?_EEPROM_Write 0001             __size_of_sprintf 015C  
              __size_of_main 012E    __end_of_Analog_Capture_ON 142C           Analog_Capture_ON@x 0003  
   __size_of_Read_UART_Input 000C   __size_of_Initialize_Analog 001C        __CFG_ADDRBW$ADDR20BIT 000000  
                 _INTCONbits 000FF2               ??_EEPROM_Write 0003                    sprintf@ap 0016  
                  sprintf@sp 000D             ___lwmod@dividend 0008                 ?_EEPROM_Read 0001  
           ?_Initialize_UART 0001                   _RCSTA1bits 000FAB           EEPROM_Read@address 000B  
          Average_Function@x 0009    __size_of_Average_Function 0046                     sprintf@c 001C  
                   sprintf@f 000F              ___lwmod@divisor 000A              ___lwmod@counter 000C  
__size_of_Analog_Capture_OFF 0004          EEPROM_Write@address 0003   __size_of_Analog_Capture_ON 005E  
